[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Penguins",
    "section": "",
    "text": "ojs_define(\n  data = readr::read_csv(\"https://raw.githubusercontent.com/quarto-dev/quarto-web/8159986c9ea1c956b9340663b2a4f03f3b75c9e2/docs/interactive/ojs/examples/palmer-penguins.csv\")\n  )\n\nRows: 344 Columns: 7\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): species, island, sex\ndbl (4): bill_length, bill_depth, flipper_length, body_mass\n\n\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nA simple example based on Allison Horst’s Palmer Penguins dataset. Here we look at how penguin body mass varies across both sex and species (use the provided inputs to filter the dataset by bill length and island):\n\nviewof bill_length_min = Inputs.range(\n  [32, 50], \n  {value: 35, step: 1, label: \"Bill length (min):\"}\n)\nviewof islands = Inputs.checkbox(\n  [\"Torgersen\", \"Biscoe\", \"Dream\"], \n  { value: [\"Torgersen\", \"Biscoe\"], \n    label: \"Islands:\"\n  }\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlotData\n\n\n\nPlot.rectY(filtered, \n  Plot.binX(\n    {y: \"count\"}, \n    {x: \"body_mass\", fill: \"species\", thresholds: 20}\n  ))\n  .plot({\n    facet: {\n      data: filtered,\n      x: \"sex\",\n      y: \"species\",\n      marginRight: 80\n    },\n    marks: [\n      Plot.frame(),\n    ]\n  }\n)\n\n\n\n\n\n\n\n\n\nInputs.table(filtered)\n\n\n\n\n\n\n\n\n\n\nfiltered = transpose(data).filter(function(penguin) {\n  return bill_length_min < penguin.bill_length &&\n         islands.includes(penguin.island);\n})\n\n\n\n\n\n\n\nexample import from observable\n\nimport {pieChart, surveyCompareBars, surveyHistograms, longList, bigPercentage, bigPercentageWithDescription} from \"d/cf42a44ac2f24b7a\"\n\n\n\n\n\n\n\nroles = d3.tsvParse(`Role   dataRole    pct count\nHobbyist    support 30.6    174\nFront-end developer support 14.2    81\nAcademic or government researcher   support 14.2    81\nData analyst or business analyst    primary 9.65    55\nData scientist  primary 7.37    42\nData architect  primary 3.3 19\nStudent support 5.61    32\nEducator    support 5.09    29\nJournalist  support 2.98    17\nOther   support 6.32    39`, d3.autoType)\n\n\n\n\n\n\n\npieChart(roles, \"Role\", \"count\", \"dataRole\", \"Responses for data-centered roles\")\n\n\n\n\n\n\n\n\n\nSource Code\n---\ntitle: \"Penguins\"\nformat:\n  html:\n    toc: false\n    echo: false\n    keep-hidden: true\n    code-tools: true\n---\n\n```{r}\nojs_define(\n  data = readr::read_csv(\"https://raw.githubusercontent.com/quarto-dev/quarto-web/8159986c9ea1c956b9340663b2a4f03f3b75c9e2/docs/interactive/ojs/examples/palmer-penguins.csv\")\n  )\n```\n\n\nA simple example based on Allison Horst's [Palmer Penguins](https://allisonhorst.github.io/palmerpenguins/) dataset. Here we look at how penguin body mass varies across both sex and species (use the provided inputs to filter the dataset by bill length and island):\n\n```{ojs}\n//| panel: input\nviewof bill_length_min = Inputs.range(\n  [32, 50], \n  {value: 35, step: 1, label: \"Bill length (min):\"}\n)\nviewof islands = Inputs.checkbox(\n  [\"Torgersen\", \"Biscoe\", \"Dream\"], \n  { value: [\"Torgersen\", \"Biscoe\"], \n    label: \"Islands:\"\n  }\n)\n```\n\n::: panel-tabset\n## Plot\n\n```{ojs}\nPlot.rectY(filtered, \n  Plot.binX(\n    {y: \"count\"}, \n    {x: \"body_mass\", fill: \"species\", thresholds: 20}\n  ))\n  .plot({\n    facet: {\n      data: filtered,\n      x: \"sex\",\n      y: \"species\",\n      marginRight: 80\n    },\n    marks: [\n      Plot.frame(),\n    ]\n  }\n)\n```\n\n## Data\n\n```{ojs}\nInputs.table(filtered)\n```\n:::\n\n\n```{ojs}\nfiltered = transpose(data).filter(function(penguin) {\n  return bill_length_min < penguin.bill_length &&\n         islands.includes(penguin.island);\n})\n```\n\n\n# example import from observable\n\n```{ojs}\nimport {pieChart, surveyCompareBars, surveyHistograms, longList, bigPercentage, bigPercentageWithDescription} from \"d/cf42a44ac2f24b7a\"\n\n```\n\n```{ojs}\nroles = d3.tsvParse(`Role   dataRole    pct count\nHobbyist    support 30.6    174\nFront-end developer support 14.2    81\nAcademic or government researcher   support 14.2    81\nData analyst or business analyst    primary 9.65    55\nData scientist  primary 7.37    42\nData architect  primary 3.3 19\nStudent support 5.61    32\nEducator    support 5.09    29\nJournalist  support 2.98    17\nOther   support 6.32    39`, d3.autoType)\n```\n\n\n```{ojs}\npieChart(roles, \"Role\", \"count\", \"dataRole\", \"Responses for data-centered roles\")\n```"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]